
ktor {
  deployment {
    watch = [app]
    port = 80
    //sslPort = 443
  }

  //  security {
  //    ssl {
  //      keyStore = mh.jks
  //      keyAlias = mh_lv1
  //      keyStorePassword = 123456
  //      privateKeyPassword = 123456
  //    }
  //  }

  application {
    //启动模块
    modules = [${package}.app.AppKt.main]
  }
}
//数据源配置
datasource {
  url: "jdbc:mysql://"
  username: ocs_test
  password: ""
}
//liquibase 配置
liquibase {
  changeLog = "db-changelog.yml"
}
//Ebean 配置
ebean {
  ddl {
    run = true
    generate = true
  }
}
# 日志打印配置
logback {
  config {
    appenders {
      CONSOLE {
        class = "ch.qos.logback.core.ConsoleAppender"
        encoder {
          pattern.value = "%d{YYYY-MM-dd HH:mm:ss.SSS} %highlight(%-5level) %green([%-4.30thread]) %blue(%logger{36}) %boldGreen(\\(%F:%line\\)) - %msg%n"
        }
      }
      ERRFILE {
        class = "ch.qos.logback.core.rolling.RollingFileAppender"
        file = "log/error.log"
        rollingPolicy {
          class = "ch.qos.logback.core.rolling.TimeBasedRollingPolicy"
          FileNamePattern.value = "log/error_%d{yyyy-MM-dd}.log.zip"
          maxHistory.value = "30"
        }
        encoder {
          pattern.value = "%d{YYYY-MM-dd HH:mm:ss.SSS} %-4relative [%thread] %-5level %logger{35} - %msg%n"
        }
      }
      APPFILE {
        class = "ch.qos.logback.core.rolling.RollingFileAppender"
        file = "log/app.log"
        rollingPolicy {
          class = "ch.qos.logback.core.rolling.TimeBasedRollingPolicy"
          FileNamePattern.value = "log/app_%d{yyyy-MM-dd}.log.zip"
          maxHistory.value = "30"
        }
        encoder {
          pattern.value = "%d{YYYY-MM-dd HH:mm:ss.SSS} %-4relative [%thread] %-5level %logger{35} - %msg%n"
        }
      }
    }
    root {level = INFO, ref = [CONSOLE]}
    loggers {
      "ktor.application": {level = INFO, ref = [APPFILE]}
      "ktor.application": {level = ERROR, ref = [ERRFILE]}
      "io.netty": {level = ERROR, ref = [ERRFILE]}
      "com.zaxxer": {level = ERROR, ref = [ERRFILE]}
    }
  }
}

caffeine {
  // SOME_CACHE = "initialCapacity=1,expireAfterAccess=1h"
}

authenticate {
  header = "Authorization"
}
